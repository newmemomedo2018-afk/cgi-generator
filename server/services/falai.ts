interface FalImageResult {
  url: string;
  width: number;
  height: number;
}

export async function generateImageWithFal(
  prompt: string,
  sceneImageUrl: string,
  productImageUrl: string,
  resolution: string = "1024x1024"
): Promise<FalImageResult> {
  try {
    if (!process.env.FAL_API_KEY) {
      throw new Error("FAL_API_KEY is not configured");
    }
    const [width, height] = resolution.split('x').map(Number);
    
    console.log("Fal.ai request details:", {
      promptLength: prompt.length,
      promptPreview: prompt.substring(0, 200) + "...",
      fullPrompt: prompt, // عرض البرومبت كامل
      sceneImageUrl,
      productImageUrl,
      width,
      height
    });
    
    // Try FLUX with better control over input image
    const response = await fetch("https://fal.run/fal-ai/flux/dev", {
      method: "POST",
      headers: {
        "Authorization": `Key ${process.env.FAL_API_KEY}`,
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        prompt,
        image_url: sceneImageUrl, // Use scene as base image
        strength: 0.8, // How much to change the original image (0.8 = high change)
        width,
        height,
        num_inference_steps: 20, // Dev model needs more steps but gives better control
        guidance_scale: 3.5, // Lower guidance for more adherence to input image
        enable_safety_checker: true,
      }),
    });

    if (!response.ok) {
      throw new Error(`Fal.ai API error: ${response.status}`);
    }

    const result = await response.json();
    
    if (!result.images || result.images.length === 0) {
      throw new Error("No images generated by Fal.ai");
    }

    return {
      url: result.images[0].url,
      width: result.images[0].width,
      height: result.images[0].height,
    };
  } catch (error) {
    console.error("Fal.ai API error:", error);
    throw new Error("Failed to generate image with Fal.ai");
  }
}
